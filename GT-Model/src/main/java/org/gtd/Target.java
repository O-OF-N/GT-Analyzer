/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.gtd;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Target extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Target\",\"namespace\":\"org.gtd\",\"fields\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"subType\",\"type\":\"string\"},{\"name\":\"corp\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"target1\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"nationality1\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"target2\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"nationality2\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"target3\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"nationality3\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  @Deprecated public java.lang.CharSequence type;
  @Deprecated public java.lang.CharSequence subType;
  @Deprecated public java.lang.CharSequence corp;
  @Deprecated public java.lang.CharSequence target1;
  @Deprecated public java.lang.CharSequence nationality1;
  @Deprecated public java.lang.CharSequence target2;
  @Deprecated public java.lang.CharSequence nationality2;
  @Deprecated public java.lang.CharSequence target3;
  @Deprecated public java.lang.CharSequence nationality3;

  /**
   * Default constructor.
   */
  public Target() {}

  /**
   * All-args constructor.
   */
  public Target(java.lang.CharSequence type, java.lang.CharSequence subType, java.lang.CharSequence corp, java.lang.CharSequence target1, java.lang.CharSequence nationality1, java.lang.CharSequence target2, java.lang.CharSequence nationality2, java.lang.CharSequence target3, java.lang.CharSequence nationality3) {
    this.type = type;
    this.subType = subType;
    this.corp = corp;
    this.target1 = target1;
    this.nationality1 = nationality1;
    this.target2 = target2;
    this.nationality2 = nationality2;
    this.target3 = target3;
    this.nationality3 = nationality3;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return type;
    case 1: return subType;
    case 2: return corp;
    case 3: return target1;
    case 4: return nationality1;
    case 5: return target2;
    case 6: return nationality2;
    case 7: return target3;
    case 8: return nationality3;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: type = (java.lang.CharSequence)value$; break;
    case 1: subType = (java.lang.CharSequence)value$; break;
    case 2: corp = (java.lang.CharSequence)value$; break;
    case 3: target1 = (java.lang.CharSequence)value$; break;
    case 4: nationality1 = (java.lang.CharSequence)value$; break;
    case 5: target2 = (java.lang.CharSequence)value$; break;
    case 6: nationality2 = (java.lang.CharSequence)value$; break;
    case 7: target3 = (java.lang.CharSequence)value$; break;
    case 8: nationality3 = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'type' field.
   */
  public java.lang.CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'subType' field.
   */
  public java.lang.CharSequence getSubType() {
    return subType;
  }

  /**
   * Sets the value of the 'subType' field.
   * @param value the value to set.
   */
  public void setSubType(java.lang.CharSequence value) {
    this.subType = value;
  }

  /**
   * Gets the value of the 'corp' field.
   */
  public java.lang.CharSequence getCorp() {
    return corp;
  }

  /**
   * Sets the value of the 'corp' field.
   * @param value the value to set.
   */
  public void setCorp(java.lang.CharSequence value) {
    this.corp = value;
  }

  /**
   * Gets the value of the 'target1' field.
   */
  public java.lang.CharSequence getTarget1() {
    return target1;
  }

  /**
   * Sets the value of the 'target1' field.
   * @param value the value to set.
   */
  public void setTarget1(java.lang.CharSequence value) {
    this.target1 = value;
  }

  /**
   * Gets the value of the 'nationality1' field.
   */
  public java.lang.CharSequence getNationality1() {
    return nationality1;
  }

  /**
   * Sets the value of the 'nationality1' field.
   * @param value the value to set.
   */
  public void setNationality1(java.lang.CharSequence value) {
    this.nationality1 = value;
  }

  /**
   * Gets the value of the 'target2' field.
   */
  public java.lang.CharSequence getTarget2() {
    return target2;
  }

  /**
   * Sets the value of the 'target2' field.
   * @param value the value to set.
   */
  public void setTarget2(java.lang.CharSequence value) {
    this.target2 = value;
  }

  /**
   * Gets the value of the 'nationality2' field.
   */
  public java.lang.CharSequence getNationality2() {
    return nationality2;
  }

  /**
   * Sets the value of the 'nationality2' field.
   * @param value the value to set.
   */
  public void setNationality2(java.lang.CharSequence value) {
    this.nationality2 = value;
  }

  /**
   * Gets the value of the 'target3' field.
   */
  public java.lang.CharSequence getTarget3() {
    return target3;
  }

  /**
   * Sets the value of the 'target3' field.
   * @param value the value to set.
   */
  public void setTarget3(java.lang.CharSequence value) {
    this.target3 = value;
  }

  /**
   * Gets the value of the 'nationality3' field.
   */
  public java.lang.CharSequence getNationality3() {
    return nationality3;
  }

  /**
   * Sets the value of the 'nationality3' field.
   * @param value the value to set.
   */
  public void setNationality3(java.lang.CharSequence value) {
    this.nationality3 = value;
  }

  /** Creates a new Target RecordBuilder */
  public static org.gtd.Target.Builder newBuilder() {
    return new org.gtd.Target.Builder();
  }
  
  /** Creates a new Target RecordBuilder by copying an existing Builder */
  public static org.gtd.Target.Builder newBuilder(org.gtd.Target.Builder other) {
    return new org.gtd.Target.Builder(other);
  }
  
  /** Creates a new Target RecordBuilder by copying an existing Target instance */
  public static org.gtd.Target.Builder newBuilder(org.gtd.Target other) {
    return new org.gtd.Target.Builder(other);
  }
  
  /**
   * RecordBuilder for Target instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Target>
    implements org.apache.avro.data.RecordBuilder<Target> {

    private java.lang.CharSequence type;
    private java.lang.CharSequence subType;
    private java.lang.CharSequence corp;
    private java.lang.CharSequence target1;
    private java.lang.CharSequence nationality1;
    private java.lang.CharSequence target2;
    private java.lang.CharSequence nationality2;
    private java.lang.CharSequence target3;
    private java.lang.CharSequence nationality3;

    /** Creates a new Builder */
    private Builder() {
      super(org.gtd.Target.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.gtd.Target.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Target instance */
    private Builder(org.gtd.Target other) {
            super(org.gtd.Target.SCHEMA$);
      if (isValidValue(fields()[0], other.type)) {
        this.type = data().deepCopy(fields()[0].schema(), other.type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.subType)) {
        this.subType = data().deepCopy(fields()[1].schema(), other.subType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.corp)) {
        this.corp = data().deepCopy(fields()[2].schema(), other.corp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.target1)) {
        this.target1 = data().deepCopy(fields()[3].schema(), other.target1);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.nationality1)) {
        this.nationality1 = data().deepCopy(fields()[4].schema(), other.nationality1);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.target2)) {
        this.target2 = data().deepCopy(fields()[5].schema(), other.target2);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.nationality2)) {
        this.nationality2 = data().deepCopy(fields()[6].schema(), other.nationality2);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.target3)) {
        this.target3 = data().deepCopy(fields()[7].schema(), other.target3);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.nationality3)) {
        this.nationality3 = data().deepCopy(fields()[8].schema(), other.nationality3);
        fieldSetFlags()[8] = true;
      }
    }

    /** Gets the value of the 'type' field */
    public java.lang.CharSequence getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public org.gtd.Target.Builder setType(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'type' field */
    public org.gtd.Target.Builder clearType() {
      type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'subType' field */
    public java.lang.CharSequence getSubType() {
      return subType;
    }
    
    /** Sets the value of the 'subType' field */
    public org.gtd.Target.Builder setSubType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.subType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'subType' field has been set */
    public boolean hasSubType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'subType' field */
    public org.gtd.Target.Builder clearSubType() {
      subType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'corp' field */
    public java.lang.CharSequence getCorp() {
      return corp;
    }
    
    /** Sets the value of the 'corp' field */
    public org.gtd.Target.Builder setCorp(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.corp = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'corp' field has been set */
    public boolean hasCorp() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'corp' field */
    public org.gtd.Target.Builder clearCorp() {
      corp = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'target1' field */
    public java.lang.CharSequence getTarget1() {
      return target1;
    }
    
    /** Sets the value of the 'target1' field */
    public org.gtd.Target.Builder setTarget1(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.target1 = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'target1' field has been set */
    public boolean hasTarget1() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'target1' field */
    public org.gtd.Target.Builder clearTarget1() {
      target1 = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'nationality1' field */
    public java.lang.CharSequence getNationality1() {
      return nationality1;
    }
    
    /** Sets the value of the 'nationality1' field */
    public org.gtd.Target.Builder setNationality1(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.nationality1 = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'nationality1' field has been set */
    public boolean hasNationality1() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'nationality1' field */
    public org.gtd.Target.Builder clearNationality1() {
      nationality1 = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'target2' field */
    public java.lang.CharSequence getTarget2() {
      return target2;
    }
    
    /** Sets the value of the 'target2' field */
    public org.gtd.Target.Builder setTarget2(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.target2 = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'target2' field has been set */
    public boolean hasTarget2() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'target2' field */
    public org.gtd.Target.Builder clearTarget2() {
      target2 = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'nationality2' field */
    public java.lang.CharSequence getNationality2() {
      return nationality2;
    }
    
    /** Sets the value of the 'nationality2' field */
    public org.gtd.Target.Builder setNationality2(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.nationality2 = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'nationality2' field has been set */
    public boolean hasNationality2() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'nationality2' field */
    public org.gtd.Target.Builder clearNationality2() {
      nationality2 = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'target3' field */
    public java.lang.CharSequence getTarget3() {
      return target3;
    }
    
    /** Sets the value of the 'target3' field */
    public org.gtd.Target.Builder setTarget3(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.target3 = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'target3' field has been set */
    public boolean hasTarget3() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'target3' field */
    public org.gtd.Target.Builder clearTarget3() {
      target3 = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'nationality3' field */
    public java.lang.CharSequence getNationality3() {
      return nationality3;
    }
    
    /** Sets the value of the 'nationality3' field */
    public org.gtd.Target.Builder setNationality3(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.nationality3 = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'nationality3' field has been set */
    public boolean hasNationality3() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'nationality3' field */
    public org.gtd.Target.Builder clearNationality3() {
      nationality3 = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public Target build() {
      try {
        Target record = new Target();
        record.type = fieldSetFlags()[0] ? this.type : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.subType = fieldSetFlags()[1] ? this.subType : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.corp = fieldSetFlags()[2] ? this.corp : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.target1 = fieldSetFlags()[3] ? this.target1 : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.nationality1 = fieldSetFlags()[4] ? this.nationality1 : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.target2 = fieldSetFlags()[5] ? this.target2 : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.nationality2 = fieldSetFlags()[6] ? this.nationality2 : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.target3 = fieldSetFlags()[7] ? this.target3 : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.nationality3 = fieldSetFlags()[8] ? this.nationality3 : (java.lang.CharSequence) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
