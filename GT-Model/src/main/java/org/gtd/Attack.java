/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.gtd;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Attack extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Attack\",\"namespace\":\"org.gtd\",\"fields\":[{\"name\":\"suicide\",\"type\":\"boolean\"},{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"motive\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"weapon\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  @Deprecated public boolean suicide;
  @Deprecated public java.lang.CharSequence type;
  @Deprecated public java.lang.CharSequence motive;
  @Deprecated public java.lang.CharSequence weapon;

  /**
   * Default constructor.
   */
  public Attack() {}

  /**
   * All-args constructor.
   */
  public Attack(java.lang.Boolean suicide, java.lang.CharSequence type, java.lang.CharSequence motive, java.lang.CharSequence weapon) {
    this.suicide = suicide;
    this.type = type;
    this.motive = motive;
    this.weapon = weapon;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return suicide;
    case 1: return type;
    case 2: return motive;
    case 3: return weapon;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: suicide = (java.lang.Boolean)value$; break;
    case 1: type = (java.lang.CharSequence)value$; break;
    case 2: motive = (java.lang.CharSequence)value$; break;
    case 3: weapon = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'suicide' field.
   */
  public java.lang.Boolean getSuicide() {
    return suicide;
  }

  /**
   * Sets the value of the 'suicide' field.
   * @param value the value to set.
   */
  public void setSuicide(java.lang.Boolean value) {
    this.suicide = value;
  }

  /**
   * Gets the value of the 'type' field.
   */
  public java.lang.CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'motive' field.
   */
  public java.lang.CharSequence getMotive() {
    return motive;
  }

  /**
   * Sets the value of the 'motive' field.
   * @param value the value to set.
   */
  public void setMotive(java.lang.CharSequence value) {
    this.motive = value;
  }

  /**
   * Gets the value of the 'weapon' field.
   */
  public java.lang.CharSequence getWeapon() {
    return weapon;
  }

  /**
   * Sets the value of the 'weapon' field.
   * @param value the value to set.
   */
  public void setWeapon(java.lang.CharSequence value) {
    this.weapon = value;
  }

  /** Creates a new Attack RecordBuilder */
  public static org.gtd.Attack.Builder newBuilder() {
    return new org.gtd.Attack.Builder();
  }
  
  /** Creates a new Attack RecordBuilder by copying an existing Builder */
  public static org.gtd.Attack.Builder newBuilder(org.gtd.Attack.Builder other) {
    return new org.gtd.Attack.Builder(other);
  }
  
  /** Creates a new Attack RecordBuilder by copying an existing Attack instance */
  public static org.gtd.Attack.Builder newBuilder(org.gtd.Attack other) {
    return new org.gtd.Attack.Builder(other);
  }
  
  /**
   * RecordBuilder for Attack instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Attack>
    implements org.apache.avro.data.RecordBuilder<Attack> {

    private boolean suicide;
    private java.lang.CharSequence type;
    private java.lang.CharSequence motive;
    private java.lang.CharSequence weapon;

    /** Creates a new Builder */
    private Builder() {
      super(org.gtd.Attack.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.gtd.Attack.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Attack instance */
    private Builder(org.gtd.Attack other) {
            super(org.gtd.Attack.SCHEMA$);
      if (isValidValue(fields()[0], other.suicide)) {
        this.suicide = data().deepCopy(fields()[0].schema(), other.suicide);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.type)) {
        this.type = data().deepCopy(fields()[1].schema(), other.type);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.motive)) {
        this.motive = data().deepCopy(fields()[2].schema(), other.motive);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.weapon)) {
        this.weapon = data().deepCopy(fields()[3].schema(), other.weapon);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'suicide' field */
    public java.lang.Boolean getSuicide() {
      return suicide;
    }
    
    /** Sets the value of the 'suicide' field */
    public org.gtd.Attack.Builder setSuicide(boolean value) {
      validate(fields()[0], value);
      this.suicide = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'suicide' field has been set */
    public boolean hasSuicide() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'suicide' field */
    public org.gtd.Attack.Builder clearSuicide() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'type' field */
    public java.lang.CharSequence getType() {
      return type;
    }
    
    /** Sets the value of the 'type' field */
    public org.gtd.Attack.Builder setType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.type = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'type' field has been set */
    public boolean hasType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'type' field */
    public org.gtd.Attack.Builder clearType() {
      type = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'motive' field */
    public java.lang.CharSequence getMotive() {
      return motive;
    }
    
    /** Sets the value of the 'motive' field */
    public org.gtd.Attack.Builder setMotive(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.motive = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'motive' field has been set */
    public boolean hasMotive() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'motive' field */
    public org.gtd.Attack.Builder clearMotive() {
      motive = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'weapon' field */
    public java.lang.CharSequence getWeapon() {
      return weapon;
    }
    
    /** Sets the value of the 'weapon' field */
    public org.gtd.Attack.Builder setWeapon(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.weapon = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'weapon' field has been set */
    public boolean hasWeapon() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'weapon' field */
    public org.gtd.Attack.Builder clearWeapon() {
      weapon = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Attack build() {
      try {
        Attack record = new Attack();
        record.suicide = fieldSetFlags()[0] ? this.suicide : (java.lang.Boolean) defaultValue(fields()[0]);
        record.type = fieldSetFlags()[1] ? this.type : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.motive = fieldSetFlags()[2] ? this.motive : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.weapon = fieldSetFlags()[3] ? this.weapon : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
